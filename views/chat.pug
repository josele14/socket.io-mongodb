doctype html
html
    head
        title Socket.IO chat
        style.
            body {
                margin: 0;
                padding-bottom: 3rem;
                font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            }
            #form {
                background: rgba(0, 0, 0, 0.15);
                padding: 0.25rem;
                position: fixed;
                bottom: 0;
                left: 0;
                right: 0;
                display: flex;
                height: 3rem;
                box-sizing: border-box;
                backdrop-filter: blur(10px);
                align-items: center;
            }
            p#username {
                font-size: large;
                font-weight: bold;
                background: #BBB;
                border: none;
                padding: 0 0.6rem;
                margin: 0.04rem;
                border-radius: 3px;
                outline: none;
                color: #000;
                min-height: 1.6em;
                font-weight: bold;
            }
            #text {
                border: none;
                padding: 0 1rem;
                flex-grow: 1;
                border-radius: 2rem;
                margin: 0.25rem;
                min-height: 2.2em;
            }
            #text:focus {
                outline: none;
            }
            #form>button {
                background: #333;
                border: none;
                padding: 0 1rem;
                margin: 0.25rem;
                border-radius: 3px;
                outline: none;
                color: #fff;
                min-height: 2.2em;
            }
            button#room, a {
                background: #fff;
                border: none;
                padding: 0 0.6rem;
                margin: 0.04rem;
                border-radius: 3px;
                outline: none;
                color: #000;
                min-height: 1.6em;
                font-weight: bold;
            }
            a {
                background: #333;
                color: #fff;
                text-decoration: none;
            }
            #messages {
                list-style-type: none;
                margin: 0;
                padding: 0;
            }
            #messages>li {
                padding: 0.5rem 1rem;
            }
            #messages>li:nth-child(odd) {
                background: #efefef;
            }
    body
        ul#messages
        form#form(action='')
            p(id="username") #{username}
            input#text(autocomplete='off' value='text')
            button Send
            button(id="room") Room #{room}
            a(href="/camera" id="goWebcam") Webcam
        script(src='/socket.io/socket.io.js')
        script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js')
        script.
            var socket = io();

            var form = document.getElementById('form');
            var text = document.getElementById('text');
            var messages = document.getElementById('messages');

            var user = document.getElementById('username').innerHTML;
            var room = document.getElementById('room').innerHTML;
            room = room.slice(4, 6);

            socket.emit("Join room", {user: user, room: room});

            socket.on('srv message', data => {
                let item = document.createElement('li');
                item.textContent = (data.user).toUpperCase() + " > " + data.msg;
                messages.appendChild(item);
                window.scrollTo(0, document.body.scrollHeight);
            });
            $(document).on('click', 'button', (e) => {
                e.preventDefault(); // Void reload page 'when submit'
                if (text.value) {
                var data = {
                    username: $('p#username').html(),
                    room: $('button#room').html(),
                    msg: $('input#text').val(),
                };
                    socket.emit('user message', {
                        user: user,
                        room: room,
                        msg: text.value
                    });
                    $('input#text').val('');
                    
                    $.ajax({
                        type: 'GET',
                        url: '/send',
                        contentType: "application/json",
                        data: data
                    })
                    .done((res_data) => {
                        console.log('Data sended by server for ajax petition')
                        console.log(res_data);
                    })
                    .fail((jqXHR, txtStatus, errorThrown) => {
                        console.log(
                            "The request failed:" +
                            "\n\tAll AJAX request data \t jqXHR: " + jqXHR + "\n" +
                            "\n\tType error description \t txtStatus: " + txtStatus + "\n" +
                            "\n\tHTTP eror \t errorThrown: " + errorThrown
                        );
                    });
                }
            });